c
n
display @card_vals
c
n
display card_vals
display @cards
exit
n
display hand.length
display hand
n
display result
display i
i
hand
exit
hand
n
display i
n
display result
n
display new_score
display hand.score
exit
hand
new_hand
n
display new_hand.score
display hand.score
hand.score
exit
n
display new_hand.length
n
new_hand.length
n
display hand.score
display score
n
display new_score
display new_hand
display result
display i
result
c
exit
cards
s
n
display i
i
s
n
new_hand
result
reslt
display new_score
n
display hand.score
display score
n
hand.score
score
hand
new_hand
n
hand
s
exit
result
n
new_hand.card_vals
new_hand
new_hand.remove_card(i)
new_hand.card_vals
new_hand.cards
new_hand
new_score
exit
@hand
s
draw_amt
c
exit
display i
i
s
hand.delete_at(card)
(hand.delete_at(card)
c
n
@card_vals.count(14)
@card_vals
@card_vals.any?{|el| @card_vals.count(el) == 3}
s
n
@card_vals
c
n
4
c
@card_vals
@cards_vals
@cards
exit
deck.push(hand.delete_at(card))
s
n
c
n
ans.between?(1, hand.length)
ans
exit
ans.between(1, hand.length)
ans
n
num
